{"version":3,"sources":["components/Footer.js","components/MenuToggler.js","components/Header.js","components/Meta.js","pages/Common.js","components/Code.js","components/SectionLink.js","components/SectionHeader.js","components/SubsectionHeader.js","components/Sidebar.js","components/SidebarLink.js","pages/Documentation/index.js","components/Button.js","components/ButtonSection.js","components/ButtonExample.js","pages/Examples/index.js","components/Hero.js","pages/Home/index.js","components/ProjectCard.js","pages/Projects/index.js","app.js","index.js"],"names":["Footer","className","size","href","target","MenuToggler","menuToggleRef","useRef","openClasses","useMemo","closeClasses","changeSidebarClassesCallback","useCallback","add","remove","menu","document","getElementById","classList","closeSidebarCallback","clickOutsideSidebarCallback","e","current","id","isSameNode","contains","resizeListener","window","innerWidth","clickSidebarLinks","useEffect","addEventListener","body","removeEventListener","onClick","ref","Header","activePage","showMenuButton","useDarkMode","isDarkMode","toggleDarkMode","to","src","alt","buttonClassName","Meta","pageTitle","url","children","ReactGA","initialize","pageview","location","pathname","search","Helmet","name","content","Common","Code","code","language","showToast","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","classes","defaultProps","theme","okaidia","style","tokens","getLineProps","getTokenProps","map","line","i","key","token","text","onCopy","SectionLink","SectionHeader","title","SubsectionHeader","Sidebar","SidebarLink","level","clickCallback","active","scroll","length","elm","querySelector","header","headerOffset","clientHeight","top","Math","abs","offsetTop","behavior","scrollCallback","indexOf","Documentation","rel","integrity","crossorigin","type","data-theme","Button","htmlContent","copyClasses","trim","replaceAll","RegExp","getCopyClasses","dangerouslySetInnerHTML","__html","ButtonSection","usesColors","usesText","buttonColors","color","index","buttonClasses","ButtonExample","shouldHaveRoundedType","shouldHaveBlockType","button","label","Examples","useState","currentButton","setCurrentButton","hash","buttons","replace","some","buttonType","variations","html","buttonChild","hasVariations","buttonIndex","variation","Hero","Home","ProjectCard","project","about","image","Projects","projects","App","path","component","exact","ReactDOM","render"],"mappings":"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","file":"static/js/main.ef112ff9.chunk.js","sourcesContent":["/* eslint-disable react/jsx-no-target-blank */\r\nimport React from 'react'\r\nimport { AiFillHeart } from 'react-icons/ai'\r\nimport { FiGithub, FiInstagram, FiLinkedin, FiTwitter } from 'react-icons/fi'\r\n\r\nfunction Footer () {\r\n    return (\r\n        <footer className=\"bg-gray-300 dark:bg-gray-600 text-gray-800 dark:text-white py-6 px-5 mt-3\">\r\n            <div className=\"container text-center\">\r\n                <p>\r\n                    Made with <AiFillHeart className=\"align-middle inline text-red-600\" size=\"1.3rem\" /> by \r\n                    <a href=\"https://shahednasser.com\" target=\"_blank\" className=\"ml-1 align-middle underline-red\">Shahed Nasser</a>\r\n                </p>\r\n                <p className=\"mt-4\">\r\n                    <a href=\"https://github.com/sButtons/sbuttons\" target=\"_blank\" className=\"px-2 hover:opacity-70\">\r\n                        <FiGithub className=\"align-middle inline\" size=\"1.3rem\" />\r\n                    </a>\r\n                    <a href=\"https://twitter.com/shahednasserr\" target=\"_blank\" className=\"px-2 hover:opacity-70\">\r\n                        <FiTwitter className=\"align-middle inline\" size=\"1.3rem\" />\r\n                    </a>\r\n                    <a href=\"https://instagram.com/shahednasser95\" target=\"_blank\" className=\"px-2 hover:opacity-70\">\r\n                        <FiInstagram className=\"align-middle inline\" size=\"1.3rem\" />\r\n                    </a>\r\n                    <a href=\"https://www.linkedin.com/in/shahed-nasser-7494b3140/\" target=\"_blank\" className=\"px-2 hover:opacity-70\">\r\n                        <FiLinkedin className=\"align-middle inline\" size=\"1.3rem\" />\r\n                    </a>\r\n                </p>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, { useCallback, useEffect, useMemo, useRef } from 'react'\r\nimport { FiMenu } from 'react-icons/fi'\r\nimport 'animate.css';\r\n\r\nfunction MenuToggler () {\r\n    const menuToggleRef = useRef(null)\r\n    const openClasses = useMemo(() => {\r\n            return ['animate__slideInLeft']\r\n        }, []),\r\n        closeClasses = useMemo(() => {\r\n            return ['animate__slideOutLeft', '-left-full']\r\n        }, [])\r\n\r\n    const changeSidebarClassesCallback = useCallback((add, remove) => {\r\n        const menu = document.getElementById('sidebar')\r\n        if (menu) {\r\n            menu.classList.remove(...remove)\r\n            menu.classList.add(...add)\r\n        }\r\n    }, [])\r\n\r\n    function toggleSidebar () {\r\n        const menu = document.getElementById('sidebar')\r\n        if (menu) {\r\n            let add = openClasses,\r\n                remove = closeClasses\r\n            if (menu.classList.contains(openClasses)) {\r\n                add = closeClasses\r\n                remove = openClasses\r\n            }\r\n            \r\n            changeSidebarClassesCallback(add, remove)\r\n        }\r\n    }\r\n\r\n    const closeSidebarCallback = useCallback(() => {\r\n        changeSidebarClassesCallback([closeClasses[0]], openClasses)\r\n    }, [changeSidebarClassesCallback, closeClasses, openClasses])\r\n\r\n    const clickOutsideSidebarCallback = useCallback((e) => {\r\n        const menu = document.getElementById('sidebar')\r\n        // Check that the clicked element isn't the toggler button\r\n        // and isn't inside the sidebar and the sidebar is opened\r\n        if (e.target && menuToggleRef && menu && \r\n            menuToggleRef.current && e.target.id !== 'sidebar' && \r\n            !e.target.isSameNode(menuToggleRef.current) && \r\n            !menuToggleRef.current.contains(e.target) && \r\n            !menu.contains(e.target) && \r\n            menu.classList.contains(openClasses)\r\n        ) {\r\n                closeSidebarCallback()\r\n        }\r\n    }, [closeSidebarCallback, openClasses])\r\n\r\n    const resizeListener = useCallback(() => {\r\n        if (window.innerWidth >= 768) {\r\n            changeSidebarClassesCallback([closeClasses[1]], closeClasses)\r\n        }\r\n    }, [changeSidebarClassesCallback, closeClasses])\r\n\r\n    const clickSidebarLinks = useCallback((e) => {\r\n        if (window.innerWidth < 768 && e.target && e.target.classList.contains('sidebar-item')) {\r\n            closeSidebarCallback()\r\n        }\r\n    }, [closeSidebarCallback])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', resizeListener)\r\n        document.body.addEventListener('click', clickOutsideSidebarCallback)\r\n        document.addEventListener('click', clickSidebarLinks)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', resizeListener)\r\n            document.body.removeEventListener('click', clickOutsideSidebarCallback)\r\n            document.removeEventListener('click', clickSidebarLinks)\r\n        }\r\n    }, [resizeListener, clickOutsideSidebarCallback, clickSidebarLinks])\r\n\r\n    return (\r\n        <div className=\"md:hidden flex sm:w-1/12 w-2/12 sm:pl-0 pl-3\">\r\n            <button className=\"focus:outline-none hover:opacity-100 opacity-40 transition-none\" \r\n                onClick={toggleSidebar}\r\n                ref={menuToggleRef}>\r\n                <FiMenu size=\"1.5rem\" />\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MenuToggler","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FiGithub, FiMoreVertical } from 'react-icons/fi'\nimport useDarkMode, { DarkModeToggler } from 'use-dark-mode-hook'\nimport MenuToggler from './MenuToggler'\n\nfunction Header({activePage = null, showMenuButton = false}) {\n    const [isDarkMode, toggleDarkMode] = useDarkMode()\n\n    return (\n        <nav className=\"shadow-sm py-5 dark:bg-gray-600 bg-white dark:text-white transition-colors duration-100\">\n            <div className=\"container flex flex-row mx-auto\">\n                {showMenuButton && <MenuToggler />}\n                <Link to=\"/\" className={`lg:w-2/12 ${showMenuButton ? 'w-4/12' : 'w-4/12'}`}>\n                    <img src=\"/images/logo-colored.png\" alt=\"Logo\" />\n                </Link>\n                <div className=\"md:flex hidden items-center lg:w-6/12\">\n                        <Link to=\"/documentation\" \n                            className={\"block border-b-2 border-transparent hover:border-red-600 mr-3 ml-4 text-xl text-gray-600 dark:text-white\" + (activePage === 'documentation' ? ' border-red-600' : '')}>\n                            Docs\n                        </Link>\n                        <Link to=\"/examples\" \n                            className={\"block border-b-2 border-transparent hover:border-red-600 mx-3 text-xl text-gray-600 dark:text-white\" + (activePage === 'examples' ? ' border-red-600' : '')}>\n                            Examples\n                        </Link>\n                        <Link to=\"/projects-using-sbuttons\" \n                            className={\"block border-b-2 border-transparent hover:border-red-600 mx-3 lg:text-xl text-sm text-gray-600 dark:text-white\" + (activePage === 'projects' ? ' border-red-600' : '')}>\n                            Projects Using sButtons\n                        </Link>\n                </div>\n                <div className=\"justify-end flex items-center lg:w-4/12 md:w-2/12 w-4/12 md:mx-0 mr-0 ml-auto\">\n                    <Link to=\"https://github.com/sButtons/sbuttons\" className=\"hover:opacity-100 opacity-40 px-3 transition-none\">\n                        <FiGithub size=\"1.5rem\" />\n                    </Link>\n                    <DarkModeToggler \n                        isDarkMode={isDarkMode} \n                        toggleDarkMode={toggleDarkMode}\n                        buttonClassName=\"focus:outline-none hover:opacity-100 opacity-40 px-3 transition-none\"\n                    />\n                    <button className=\"block group md:hidden px-3 relative focus:outline-none align-text-bottom\">\n                        <FiMoreVertical size=\"1.5rem\" className=\"hover:opacity-100 opacity-40 transition-none\" />\n                        <div className=\"absolute bg-gray-100 dark:bg-gray-700 group-hover:block group-focus:block hidden right-1.5 shadow-md top-9\">\n                            <Link className=\"block dark:hover:bg-gray-800 dark:hover:text-white dark:text-gray-100 hover:bg-gray-200 hover:text-gray-600 px-4 py-2 text-gray-500 text-lg text-left\" to=\"/documentation\">\n                                Get Started\n                            </Link>\n                            <Link className=\"block dark:hover:bg-gray-800 dark:hover:text-white dark:text-gray-100 hover:bg-gray-200 hover:text-gray-600 px-4 py-2 text-gray-500 text-lg text-left\" to=\"/examples\">\n                                Examples\n                            </Link>\n                            <Link className=\"block dark:hover:bg-gray-800 dark:hover:text-white dark:text-gray-100 hover:bg-gray-200 hover:text-gray-600 px-4 py-2 text-gray-500 text-md text-left\" to=\"/projects-using-sbuttons\">\n                                Projects Using sButtons\n                            </Link>\n                        </div>\n                    </button>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nexport default Header;","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport ReactGA from 'react-ga';\r\n\r\nfunction Meta ({pageTitle = '', url = 'https://sbuttons.github.io/sbuttons/', children = {}}) {\r\n\r\n    ReactGA.initialize('UA-149400351-4');\r\n    ReactGA.pageview(window.location.pathname + window.location.search);\r\n\r\n    return (\r\n        <Helmet>\r\n            <title>{pageTitle ? pageTitle + ' - ' : ''}sButtons{!pageTitle ? ' - Simple buttons you can use easily for your next project.' : ''}</title>\r\n            <meta name=\"description\" content=\"Simple buttons you can use easily for your next project.\" />\r\n            <meta name=\"keywords\" content=\"css, less, buttons, simple, project, github, open source, contribute, first timers, animation, hover, basic, social, login\" />\r\n            <meta name=\"og:url\" content={url} />\r\n            <meta name=\"og:type\" content=\"website\" />\r\n            {children}\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nexport default Meta","import React from 'react'\r\nimport Header from '../components/Header'\r\nimport Meta from '../components/Meta'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nfunction Common ({activePage = null, pageTitle = '', showMenuButton = false, children = []}) {\r\n    return (\r\n        <div className=\"sticky top-0 z-10\">\r\n            <Meta pageTitle={pageTitle} children={children} />\r\n            <ToastContainer />\r\n            <Header activePage={activePage} showMenuButton={showMenuButton} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Common","import React from 'react'\r\nimport Highlight, { defaultProps } from \"prism-react-renderer\"\r\nimport okaidia from \"prism-react-renderer/themes/okaidia\"\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard'\r\nimport { FiCopy } from 'react-icons/fi'\r\nimport { toast } from 'react-toastify'\r\n\r\n\r\nfunction Code ({code, language, className=\"\"}) {\r\n\r\n    function showToast () {\r\n        toast.success('Copied!', {\r\n            className: 'dark:bg-gray-800',\r\n            position: \"top-right\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: false,\r\n            pauseOnHover: false,\r\n            draggable: false,\r\n            progress: undefined,\r\n        })\r\n    }\r\n\r\n    const classes = className\r\n\r\n    return (\r\n        <Highlight {...defaultProps} theme={okaidia} code={code} language={language}>\r\n            {({ className, style, tokens, getLineProps, getTokenProps }) => (\r\n            <div className={`relative ${classes}`}>\r\n                <pre className={className + ' p-3 dark:bg-gray-700 overflow-x-auto overflow-y-hidden lg:w-11/12 w-10/12'} style={style}>\r\n                {tokens.map((line, i) => (\r\n                    <div {...getLineProps({ line, key: i })}>\r\n                        {line.map((token, key) => (\r\n                        <span {...getTokenProps({ token, key })} />\r\n                        ))}\r\n                    </div>\r\n                    ))}\r\n                </pre>\r\n                <CopyToClipboard text={code} onCopy={showToast}>\r\n                    <button className=\"group absolute bg-gray-700 cursor-pointer h-full right-0 text-white lg:w-1/12 w-2/12 top-0 focus:outline-none\">\r\n                        <FiCopy className=\"duration-100 group-hover:opacity-100 opacity-60 transition-opacity m-auto\" />\r\n                    </button>\r\n                </CopyToClipboard>\r\n            </div>\r\n            )}\r\n        </Highlight>\r\n    )\r\n}\r\n\r\nexport default Code","import React from 'react'\r\nimport { FiHash } from 'react-icons/fi'\r\n\r\nfunction SectionLink ({to}) {\r\n    return (\r\n        <a href={`#${to}`} className=\"hover:opacity-100 inline-block mr-2 opacity-80 text-red-600\">\r\n            <FiHash className=\"inline\" /> \r\n        </a>\r\n    )\r\n}\r\n\r\nexport default SectionLink","import React from 'react'\r\nimport SectionLink from './SectionLink'\r\n\r\nfunction SectionHeader ({title, to}) {\r\n    return (\r\n        <h3 className=\"text-3xl font-medium mb-3\">\r\n            <SectionLink to={to} />\r\n            {title}\r\n        </h3>\r\n    )\r\n}\r\n\r\nexport default SectionHeader","import React from 'react'\r\nimport SectionLink from './SectionLink'\r\n\r\nfunction SubsectionHeader ({title, to}) {\r\n    return (\r\n        <h4 className=\"text-xl font-medium mb-3\">\r\n            <SectionLink to={to} />\r\n            {title}\r\n        </h4>\r\n    )\r\n}\r\n\r\nexport default SubsectionHeader","import React from 'react'\r\n\r\nfunction Sidebar ({children = []}) {\r\n    return (\r\n        <div className=\"md:relative fixed animate__animated -left-full md:left-0 dark:bg-gray-700 bg-white shadow-md h-full md:block md:pt-0 md:w-4/12 top-0 w-9/12 z-20\" id=\"sidebar\">\r\n            <div className=\"md:fixed h-full md:h-5/6 md:pt-0 md:w-4/12 overflow-y-auto pb-3 pl-5 pt-5\">\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar","import React, { useCallback, useEffect } from 'react' \r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction SidebarLink ({text, to = \"\", level = 0, clickCallback = null, current = null}) {\r\n    const active = current === to\r\n    function scroll () {\r\n        if (to.length) {\r\n            const elm = document.querySelector(to)\r\n            if (elm) {\r\n                const header = document.querySelector('.sticky nav'),\r\n                    headerOffset = header ? header.clientHeight : 0\r\n                window.scroll({\r\n                    top: Math.abs(elm.offsetTop - headerOffset),\r\n                    behavior: 'smooth'\r\n                })\r\n            }\r\n            if (clickCallback) {\r\n                clickCallback(to)\r\n            }\r\n        }\r\n    }\r\n\r\n    const scrollCallback = useCallback(scroll, [clickCallback, to])\r\n\r\n    useEffect (() => {\r\n        if (window.location.href.indexOf(to) !== -1) {\r\n            scrollCallback()\r\n        }\r\n    }, [scrollCallback, to])\r\n\r\n    return (\r\n        <Link to={to.length ? to : '#'} \r\n            onClick={scroll}\r\n            className={`block ${active ? 'border-red-600' : ''} sidebar-item lg:w-max text-lg border-b-2 border-transparent hover:border-red-600 dark:text-white ml-${level * 3}`}>{text}</Link>\r\n    )\r\n}\r\n\r\nexport default SidebarLink","import React from 'react'\r\nimport Footer from '../../components/Footer'\r\nimport Common from '../Common'\r\nimport Code from '../../components/Code'\r\nimport SectionHeader from '../../components/SectionHeader'\r\nimport SubsectionHeader from '../../components/SubsectionHeader'\r\nimport { Link } from 'react-router-dom'\r\nimport Sidebar from '../../components/Sidebar'\r\nimport SidebarLink from '../../components/SidebarLink'\r\n\r\nfunction Documentation () {\r\n    return (\r\n        <div className=\"documentation\">\r\n            <Common activePage=\"documentation\" pageTitle=\"Documentation\" showMenuButton={true}>\r\n            <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.14.0/css/all.css\" integrity=\"sha384-HzLeBuhoNPvSl5KYnjx0BT+WB0QEEqLprO+NBkkk5gbc67FTaL7XIGa2w1L0Xbgc\" crossorigin=\"anonymous\" />\r\n            </Common>\r\n            <div className=\"flex mt-5\">\r\n                <Sidebar>\r\n                    <SidebarLink to=\"#download\" text=\"Download\" />\r\n                    <SidebarLink to=\"#cdn\" text=\"CDN\" />\r\n                    <SidebarLink to=\"#npm\" text=\"NPM\" />\r\n                    <SidebarLink to=\"#npm-using-in-css\" text=\"Using in CSS\" level={1} />\r\n                    <SidebarLink to=\"#npm-using-in-less\" text=\"Using in Less\" level={1} />\r\n                    <SidebarLink to=\"#usage\" text=\"Usage\" />\r\n                    <SidebarLink to=\"#basic-button\" text=\"Basic Button\" level={1} />\r\n                    <SidebarLink to=\"#block-buttons\" text=\"Block Buttons\" level={1} />\r\n                    <SidebarLink to=\"#disabled-buttons\" text=\"Disabled Buttons\" level={1} />\r\n                    <SidebarLink to=\"#icon-buttons\" text=\"Icon Buttons\" level={1} />\r\n                    <SidebarLink to=\"#only-icon\" text=\"Only Icon\" level={2} />\r\n                    <SidebarLink to=\"#icon-left\" text=\"Icon Left\" level={2} />\r\n                    <SidebarLink to=\"#icon-right\" text=\"Icon Right\" level={2} />\r\n                    <SidebarLink to=\"#toggle-buttons\" text=\"Toggle Button\" level={1} />\r\n                    <SidebarLink to=\"#toggle-button-checkbox\" text=\"Toggle Button as Checkboxes\" level={2} />\r\n                    <SidebarLink to=\"#toggle-button-radio\" text=\"Toggle Button as Radio Buttons\" level={2} />\r\n                    <SidebarLink to=\"#dark-mode\" text=\"Dark Mode\" level={1} />\r\n                    <SidebarLink to=\"#dark-mode-class\" text=\"Using dark-mode Class\" level={2} />\r\n                    <SidebarLink to=\"#dark-mode-attribute\" text=\"Using data-theme attribute\" level={2} />\r\n                </Sidebar>\r\n                <div className=\"container content lg:pr-20 md:w-8/12 pl-3\">\r\n                    <h2 className=\"text-4xl mb-7\">Get Started with sButtons</h2>\r\n                    <section id=\"download\" className=\"lg:w-10/12 md:w-11/12\">\r\n                        <SectionHeader title=\"Download CSS File\" to=\"cdn\" />\r\n                        <div className=\"pl-8 text-lg\">\r\n                            <p className=\"mb-3\">\r\n                                You can download the CSS file here and then add it to your html file in between the tags.<br />\r\n                                Download the file and link it as a stylesheet in between your <code>{\"<head>\"}</code> tags, as shown below.\r\n                            </p>\r\n                            <Code code={`<link rel=\"stylesheet\" href=\"/path/to/sbuttons.min.css\">`} language=\"html\" />\r\n                            <p className=\"mt-3\">Make sure to replace <code>\"/path/to/sbuttons.min.css\"</code> with the path you stored it in.</p>\r\n                        </div>\r\n                    </section>\r\n                    <section id=\"cdn\" className=\"mt-8 lg:w-10/12 md:w-11/12\">\r\n                        <SectionHeader title=\"CDN\" to=\"cdn\" />\r\n                        <div className=\"pl-8 text-lg\">\r\n                            <p className=\"mb-3\">\r\n                                Or instead of downloading the file, you can use the CDN\r\n                            </p>\r\n                            <Code code={`<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/sbuttons/dist/sbuttons.min.css\">`} language=\"html\" />\r\n                            <p className=\"mt-3 mb-3\">\r\n                                In case of using buttons that have icons in them, make sure to include font awesome's \r\n                                CDN in the <code>{`<head>`}</code> tag.\r\n                            </p>\r\n                            <Code code={`<link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.14.0/css/all.css\" integrity=\"sha384-HzLeBuhoNPvSl5KYnjx0BT+WB0QEEqLprO+NBkkk5gbc67FTaL7XIGa2w1L0Xbgc\" crossorigin=\"anonymous\">`} \r\n                                language=\"html\" />\r\n                        </div>\r\n                    </section>\r\n                    <section id=\"npm\" className=\"mt-8 lg:w-10/12 md:w-11/12\">\r\n                        <SectionHeader title=\"NPM\" to=\"npm\" />\r\n                        <div className=\"pl-8 text-lg\">\r\n                            <p className=\"mb-3\">\r\n                                You can install sButtons using NPM:\r\n                            </p>\r\n                            <Code code={`npm i sbuttons`} language=\"shell\" />\r\n                        </div>\r\n                        \r\n                        <section id=\"npm-using-in-css\" className=\"mt-7\">\r\n                            <SubsectionHeader title=\"Using in CSS\" to=\"npm-using-in-css\" />\r\n                            <div className=\"pl-8 text-lg\">\r\n                                <p className=\"mb-3\">\r\n                                    You can import the CSS file found in <code>dist/sbuttons.css</code> or <code>dist/sbuttons.min.css</code>:\r\n                                </p>\r\n                                <Code code={`@import url('~sbuttons/dist/sbuttons.min.css');`} language=\"css\" />\r\n                            </div>\r\n                        </section>\r\n                        \r\n                        <section id=\"npm-using-in-less\" className=\"mt-7\">\r\n                            <SubsectionHeader title=\"Using in Less\" to=\"npm-using-in-less\" />\r\n                            <div className=\"pl-8 text-lg\">\r\n                                <p className=\"mb-3\">\r\n                                    You can also import the LESS file found in <code>src/sbuttons.less</code>:\r\n                                </p>\r\n                                <Code code={`@import '~sbuttons/src/sbuttons.less';`} language=\"less\" />\r\n                            </div>\r\n                        \r\n                            <section id=\"less-modify-colors\" className=\"mt-7\">\r\n                                <SubsectionHeader title=\"Modify Colors\" to=\"less-modify-colors\" />\r\n                                <div className=\"pl-8 text-lg\">\r\n                                    <p className=\"mb-3\">\r\n                                        To modify button colors, import <code>src/_variables.less</code> in your Less file, \r\n                                        then make changes to the variables after the import.<br/>\r\n                                        For example, to change the blue color to a different shade:\r\n                                    </p>\r\n                                    <Code code={`@import '/path/to/_variables.less';\\n@blue: #54a2bd; /* Make it darker */`} \r\n                                        language=\"less\" />\r\n                                    <p className=\"mt-3\">\r\n                                        Check out <a href=\"https://github.com/sButtons/sbuttons/blob/master/src/_variables.less\" className=\"underline-red\">_variables.less</a> for the full list of variables.\r\n                                    </p>\r\n                                </div>\r\n                            </section>\r\n                        </section>\r\n                    </section>\r\n                    <section id=\"usage\" className=\"mt-8 lg:w-10/12 md:w-11/12\">\r\n                        <SectionHeader title=\"Usage\" to=\"usage\" />\r\n                        \r\n                        <section id=\"basic-button\" className=\"mt-7\">\r\n                            <SubsectionHeader title=\"Basic Button\" to=\"basic-button\" />\r\n                            <div className=\"pl-8 text-lg\">\r\n                                <p className=\"mb-3\">\r\n                                    To use sButtons in your project, just add the classes of sButton you want to either <code>{`<button>`}</code> or <code>{`<a>`}</code> tags.<br />\r\n                                    For example:\r\n                                </p>\r\n                                <Code code={`<button class=\"sbtn basic-btn blue-btn\">Button</button>`} language=\"html\" />\r\n                                <p className=\"mt-3\">\r\n                                    Gives us this button: <br />\r\n                                    <button className=\"sbtn basic-btn blue-btn mt-3\">Button</button>\r\n                                </p>\r\n                                <p className=\"mt-3\">\r\n                                    You can find all classes mentioned in our <Link to=\"/examples\" className=\"underline-red\">Examples</Link> page.\r\n                                </p>\r\n                            </div>\r\n                        </section>\r\n                        \r\n                        <section id=\"block-buttons\" className=\"mt-7\">\r\n                            <SubsectionHeader title=\"Block Buttons\" to=\"block-buttons\" />\r\n                            <div className=\"pl-8 text-lg\">\r\n                                <p className=\"mb-3\">\r\n                                    To use sButtons with block display, add the class to either <code>{`<button>`}</code> or <code>{`<a>`}</code>.<br />\r\n                                    For example:\r\n                                </p>\r\n                                <Code code={`<button class=\"sbtn basic-btn blue-btn block-btn\">Button</button>`} language=\"html\" />\r\n                                <p className=\"mt-3\">\r\n                                    Gives us this button: <br />\r\n                                    <button className=\"sbtn basic-btn blue-btn block-btn\">Button</button>\r\n                                </p>\r\n                            </div>\r\n                        </section>\r\n                        \r\n                        <section id=\"disabled-buttons\" className=\"mt-7\">\r\n                            <SubsectionHeader title=\"Disabled Buttons\" to=\"disabled-buttons\" />\r\n                            <div className=\"pl-8 text-lg\">\r\n                                <p className=\"mb-3\">\r\n                                    To make a <code>{`<button>`}</code> or <code>{`<a>`}</code> tag disabled, add disabled-btn class as shown below.<br />\r\n                                    For example:\r\n                                </p>\r\n                                <Code code={`<button class=\"sbtn basic-btn blue-btn disabled-btn\">Button</button>`} language=\"html\" />\r\n                                <p className=\"mt-3\">\r\n                                    Gives us this button: <br />\r\n                                    <button className=\"sbtn basic-btn blue-btn disabled-btn\">Button</button>\r\n                                </p>\r\n                            </div>\r\n                        </section>\r\n                        \r\n                        <section id=\"icon-buttons\" className=\"mt-7\">\r\n                            <SubsectionHeader title=\"Icon Buttons\" to=\"icon-buttons\" />\r\n                            <div className=\"pl-8 text-lg\">\r\n                                <p className=\"mb-3\">\r\n                                The <code>base-icon-btn</code> class enables you to have a normal, customizable icon button. Using it, \r\n                                you decide to add any fontawesome icon in it. You can choose to either place it on the left or right \r\n                                side of the button with the available classes.\r\n                                </p>\r\n                            </div>\r\n\r\n                            <section id=\"only-icon\" className=\"mt-7\">\r\n                                <SubsectionHeader title=\"Only Icon\" to=\"only-icon\" />\r\n                                <div className=\"pl-8 text-lg\">\r\n                                    <p className=\"mb-3\">\r\n                                        The <code>icon-btn</code> class alone gives you a default button with no background color\r\n                                        and border.<br />\r\n                                        For example:\r\n                                    </p>\r\n                                    <Code code={`<button class=\"sbtn icon-btn\"><i class=\"fas fa-book\"></i></button>`} language=\"html\" />\r\n                                    <p className=\"mt-3\">\r\n                                        Gives us this button: <br />\r\n                                        <button className=\"sbtn icon-btn\"><i className=\"fas fa-book\"></i></button>\r\n                                    </p>\r\n                                </div>\r\n                            </section>\r\n                            <section id=\"icon-left\" className=\"mt-7\">\r\n                                <SubsectionHeader title=\"Icon Positioned to The Left\" to=\"icon-left\" />\r\n                                <div className=\"pl-8 text-lg\">\r\n                                    <p className=\"mb-3\">\r\n                                        Adding the <code>icon-left</code> class to a button makes the icon positioned to the left.<br />\r\n                                        For example:\r\n                                    </p>\r\n                                    <Code code={`<button class=\"sbtn base-icon-btn icon-left orange-btn\"><i class=\"fas fa-book\"></i>Read</button>`} language=\"html\" />\r\n                                    <p className=\"mt-3\">\r\n                                        Gives us this button: <br />\r\n                                        <button className=\"sbtn base-icon-btn icon-left orange-btn\"><i className=\"fas fa-book\"></i>Read</button>\r\n                                    </p>\r\n                                </div>\r\n                            </section>\r\n                            <section id=\"icon-right\" className=\"mt-7\">\r\n                                <SubsectionHeader title=\"Icon Positioned to The Left\" to=\"icon-right\" />\r\n                                <div className=\"pl-8 text-lg\">\r\n                                    <p className=\"mb-3\">\r\n                                        Adding the <code>icon-right</code> class to a button makes the icon positioned to the right.<br />\r\n                                        For example:\r\n                                    </p>\r\n                                    <Code code={`<button class=\"sbtn base-icon-btn icon-right orange-btn\">Read<i class=\"fas fa-book\"></i></button>`} language=\"html\" />\r\n                                    <p className=\"mt-3\">\r\n                                        Gives us this button: <br />\r\n                                        <button className=\"sbtn base-icon-btn icon-right orange-btn\">Read<i className=\"fas fa-book\"></i></button>\r\n                                    </p>\r\n                                </div>\r\n                            </section>\r\n                        </section>\r\n                    \r\n                        <section id=\"toggle-buttons\" className=\"mt-7\">\r\n                            <SubsectionHeader title=\"Toggle Button\" to=\"toggle-buttons\" />\r\n                            <div className=\"pl-8 text-lg\">\r\n                                <p className=\"mb-3\">\r\n                                    The <code>toggle-btn</code> class along with the <code>toggle-off-btn</code> / <code>toggle-on-btn</code> state \r\n                                    class enables you to have a toggle button. Apart from the basic use, it can also be used for checkboxes \r\n                                    and radio buttons. While not necessary, you can use the available state classes to choose whether \r\n                                    your checkboxes and radio buttons are checked or not.\r\n                                </p>\r\n                            </div>\r\n\r\n                            <section id=\"toggle-button-checkbox\" className=\"mt-7\">\r\n                                <SubsectionHeader title=\"Toggle Button as Checkboxes\" to=\"toggle-button-checkbox\" />\r\n                                <div className=\"pl-8 text-lg\">\r\n                                    <p className=\"mb-3\">\r\n                                        Adding the <code>toggle-btn</code> class to your checkbox inputs converts them to toggle buttons.<br />\r\n                                        For example:\r\n                                    </p>\r\n                                    <Code code={`<input type=\"checkbox\" class=\"sbtn toggle-btn\"/>`} language=\"html\" />\r\n                                    <p className=\"mt-3\">\r\n                                        Gives us this checkbox as a toggle button: <br />\r\n                                        <input type=\"checkbox\" className=\"sbtn toggle-btn\"/>\r\n                                    </p>\r\n                                </div>\r\n                            </section>\r\n\r\n                            <section id=\"toggle-button-radio\" className=\"mt-7\">\r\n                                <SubsectionHeader title=\"Toggle Button as Radio Buttons\" to=\"toggle-button-radio\" />\r\n                                <div className=\"pl-8 text-lg\">\r\n                                    <p className=\"mb-3\">\r\n                                        Adding the <code>toggle-btn</code> class to your radio inputs converts them to toggle buttons.<br />\r\n                                        For example:\r\n                                    </p>\r\n                                    <p className=\"mt-3 mb-3\">\r\n                                        Select favourite car brand :\r\n                                        <label className=\"block mb-3\">\r\n                                            <input type=\"radio\" name=\"car\" className=\"sbtn toggle-btn align-middle mr-3\"/>\r\n                                            Tesla\r\n                                        </label>\r\n                                        <label className=\"block mb-3\">\r\n                                            <input type=\"radio\" name=\"car\" className=\"sbtn toggle-btn align-middle mr-3\"/>\r\n                                            Budgati\r\n                                        </label>\r\n                                        <label className=\"block\">\r\n                                            <input type=\"radio\" name=\"car\" className=\"sbtn toggle-btn align-middle mr-3\"/>\r\n                                            Ferrari\r\n                                        </label>\r\n                                    </p>\r\n                                    <Code code={`<input type=\"radio\" class=\"sbtn toggle-btn\"/>`} language=\"html\" />\r\n                                </div>\r\n                            </section>\r\n                        </section>                    \r\n                    \r\n                        <section id=\"dark-mode\" className=\"mt-7\">\r\n                            <SubsectionHeader title=\"Dark Mode\" to=\"dark-mode\" />\r\n                            <div className=\"pl-8 text-lg\">\r\n                                <p className=\"mb-3\">\r\n                                    sButtons is compatible with dark mode. It either works by adding <code>dark-mode</code> class to buttons,\r\n                                    or by adding <code>data-theme=\"dark\"</code> to a container element.\r\n                                </p>\r\n                            </div>\r\n                        \r\n                            <section id=\"dark-mode-class\" className=\"mt-7\">\r\n                                <SubsectionHeader title=\"Using dark-mode Class\" to=\"dark-mode-class\" />\r\n                                <div className=\"pl-8 text-lg\">\r\n                                    <Code code={`<button class=\"sbtn dashed-btn black-btn dark-mode\">Dark-Mode</button>`} language=\"html\" />\r\n                                    <p className=\"mt-3\">\r\n                                        Gives us this button (to see it in action toggle dark mode in the header of this website.): <br />\r\n                                        <button className=\"sbtn dashed-btn black-btn dark-mode mt-3\">Dark-Mode</button>\r\n                                    </p>\r\n                                </div>\r\n                            </section>\r\n                        \r\n                            <section id=\"dark-mode-attribute\" className=\"mt-7\">\r\n                                <SubsectionHeader title=\"Using data-theme attribute\" to=\"dark-mode-attribute\" />\r\n                                <div className=\"pl-8 text-lg\">\r\n                                    <p className=\"mb-3\">\r\n                                        By adding <code>data-theme=\"dark\"</code> to a parent element like the <code>body</code> or \r\n                                        a <code>div</code> element, the button will automatically be in dark mode.\r\n                                    </p>\r\n                                    <Code code={`<div data-theme=\"dark\"><button class=\"sbtn dashed-btn black-btn\">Dark-Mode</button></div>`} language=\"html\" />\r\n                                    <p className=\"mt-3\">\r\n                                        Gives us this button:\r\n                                    </p>\r\n                                    <p data-theme=\"dark\" className=\"mt-3 bg-gray-800 p-2\"><button className=\"sbtn dashed-btn black-btn\">Dark-Mode</button></p>\r\n                                    <p className=\"mt-3\">\r\n                                        <b>Note:</b> <code>data-theme=\"dark\"</code> attribute does not give dark mode styling to the container element, you have to do that yourself.\r\n                                        It only toggles sButtons to be in dark mode.\r\n                                    </p>\r\n                                </div>\r\n                            </section>\r\n                        </section>\r\n                    </section>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Documentation","import React from 'react' \r\nimport CopyToClipboard from 'react-copy-to-clipboard'\r\nimport { toast } from 'react-toastify'\r\nimport { FiCopy } from 'react-icons/fi'\r\n\r\nfunction Button ({classes, text, htmlContent}) {\r\n    function getCopyClasses(classes) {\r\n        classes = classes.trim()\r\n        return \".\" + classes.replaceAll(new RegExp(/\\s+/g), \".\")\r\n    }\r\n\r\n    function showToast () {\r\n        toast.success('Copied!', {\r\n            className: 'dark:bg-gray-800',\r\n            position: \"top-right\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: false,\r\n            pauseOnHover: false,\r\n            draggable: false,\r\n            progress: undefined,\r\n        })\r\n    }\r\n\r\n    const copyClasses = classes ? getCopyClasses(classes) : \"\"\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center justify-items-center pb-5 pr-3 md:w-4/12 w-6/12\">\r\n            <button className={`${classes} max-w-full`}>\r\n                {htmlContent && htmlContent.length && <div dangerouslySetInnerHTML={{__html: htmlContent}}></div>}\r\n                {(!htmlContent || !htmlContent.length) && text}\r\n            </button>\r\n            <CopyToClipboard text={copyClasses} onCopy={showToast}>\r\n                <span className=\"mt-3 text-gray-500 text-sm text-center cursor-pointer\">\r\n                    <FiCopy className=\"inline-block\" />\r\n                    <span className=\"pl-3\">{copyClasses}</span>\r\n                </span>\r\n            </CopyToClipboard>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport buttonColors from '../data/button-colors.json'\r\nimport Button from './Button'\r\n\r\nfunction ButtonSection ({title, text, classes, htmlContent = \"\", usesColors = true, usesText = true}) {\r\n    classes = \"sbtn \" + classes\r\n\r\n    return (\r\n        <section className=\"border-2 border-gray-100 dark:border-gray-600 mb-4 pt-3 px-3 rounded\">\r\n            <h4 className=\"text-2xl mb-5 text-center\">{title}</h4>\r\n            <div className=\"flex flex-row flex-wrap justify-center\">\r\n                {usesColors && buttonColors.map((color, index) => {\r\n                    const buttonClasses = `${classes} ${color}`\r\n                    return <Button classes={buttonClasses} text={usesText ? text : ''} key={index} htmlContent={htmlContent} />\r\n                    })}\r\n                {!usesColors && <Button classes={classes} text={usesText ? text : ''} htmlContent={htmlContent} />}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ButtonSection","import React from 'react' \r\nimport ButtonSection from './ButtonSection'\r\n\r\nfunction ButtonExample ({\r\n    type: {shouldHaveRoundedType, shouldHaveBlockType, usesColors, usesText},\r\n    button: {classes = \"\", htmlContent = \"\", label = \"\", text = \"\"}\r\n}) {\r\n\r\n    return (\r\n        <div className=\"button-example-container\">\r\n            {label.length >= 1 && <h2 className=\"mb-3 text-3xl mt-3\">{label}</h2>}\r\n            <div>\r\n                <ButtonSection title=\"Basic\" text={text.length ? text : \"Basic\"} classes={classes} usesColors={usesColors} usesText={usesText} htmlContent={htmlContent} />\r\n                { shouldHaveRoundedType && \r\n                    <ButtonSection title=\"Rounded\" text={text.length ? text : \"Rounded\"} classes={`${classes} rounded-btn`} usesColors={usesColors} usesText={usesText} htmlContent={htmlContent} />\r\n                }\r\n                { shouldHaveBlockType && \r\n                    <ButtonSection title=\"Block\" text={text.length ? text : \"Block\"} classes={`${classes} block-btn`} usesColors={usesColors} usesText={usesText} htmlContent={htmlContent} />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ButtonExample","import React, { useEffect, useState } from 'react' \r\nimport Common from '../Common'\r\nimport Sidebar from '../../components/Sidebar'\r\nimport SidebarLink from '../../components/SidebarLink'\r\nimport buttons from '../../data/buttons.json'\r\nimport ButtonExample from '../../components/ButtonExample'\r\n\r\nfunction Examples () {\r\n    const [currentButton, setCurrentButton] = useState(null)\r\n\r\n    useEffect(() => {\r\n        //todo set currentbutton intial value\r\n        if (window.location.hash) {\r\n            setCurrentButton(window.location.hash)\r\n        } else {\r\n            if (buttons.length) {\r\n                //set the first button as current button\r\n                if (buttons[0].children.length) {\r\n                    setCurrentButton('#' + buttons[0].children[0].type)\r\n                } else {\r\n                    setCurrentButton('#' + buttons[0].type)\r\n                }\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    let button = null\r\n    if (currentButton) {\r\n        const type = currentButton.replace(\"#\", \"\")\r\n        buttons.some((buttonType) => {\r\n            if (buttonType.type === type) {\r\n                button = {\r\n                    button: {\r\n                        title: buttonType.label,\r\n                        classes: buttonType.classes,\r\n                        variations: buttonType.variations ? buttonType.variations : [],\r\n                        html: buttonType.html !== undefined ? buttonType.html : \"\",\r\n                        text: buttonType.text !== undefined ? buttonType.text : \"\"\r\n                    },\r\n                    type: {\r\n                        name: buttonType.label,\r\n                        shouldHaveRoundedType: buttonType.shouldHaveRoundedType !== undefined ? buttonType.shouldHaveRoundedType : true,\r\n                        shouldHaveBlockType: buttonType.shouldHaveBlockType !== undefined ? buttonType.shouldHaveBlockType : true,\r\n                        usesColors: buttonType.usesColors\r\n                    }\r\n                }\r\n                return true\r\n            } else {\r\n                return buttonType.children.some((buttonChild) => {\r\n                    if (buttonChild.type === type) {\r\n                        button = {\r\n                            button: {\r\n                                title: buttonChild.label,\r\n                                classes: buttonType.classes + \" \" + buttonChild.classes,\r\n                                variations: buttonChild.variations ? buttonChild.variations : [],\r\n                                html: buttonType.html !== undefined ? buttonType.html : \"\",\r\n                                text: buttonChild.text !== undefined ? buttonChild.text : \"\"\r\n                            },\r\n                            type: {\r\n                                name: buttonType.label,\r\n                                shouldHaveRoundedType: buttonChild.shouldHaveRoundedType !== undefined ? buttonChild.shouldHaveRoundedType : true,\r\n                                shouldHaveBlockType: buttonChild.shouldHaveBlockType !== undefined ? buttonChild.shouldHaveBlockType : true,\r\n                                usesColors: buttonChild.usesColors,\r\n                                usesText: buttonChild.usesText\r\n                            }\r\n                        }\r\n                        return true\r\n                    }\r\n                    return false\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const hasVariations = button && button.button.variations && button.button.variations.length >= 1\r\n\r\n    return (\r\n        <div className=\"examples\">\r\n            <Common activePage=\"examples\" pageTitle={`${button && button.button.title ? button.button.title + ' - ' : ''}Examples`} showMenuButton={true}>\r\n                <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.14.0/css/all.css\" integrity=\"sha384-HzLeBuhoNPvSl5KYnjx0BT+WB0QEEqLprO+NBkkk5gbc67FTaL7XIGa2w1L0Xbgc\" crossorigin=\"anonymous\" />\r\n            </Common>\r\n            <div className=\"flex mt-5\">\r\n                <Sidebar>\r\n                    {buttons.map((buttonType, index) => {\r\n                        if (!buttonType.children.length) {\r\n                            return <SidebarLink to={`#${buttonType.type}`} text={buttonType.label} \r\n                                key={`${buttonType.type}_${index}`} clickCallback={setCurrentButton}\r\n                                current={currentButton} />\r\n                        } else {\r\n                            return (\r\n                                <div key={`${buttonType.type}_${index}`}>\r\n                                    <SidebarLink text={buttonType.label} \r\n                                        key={`${buttonType.type}_${index}`} />\r\n                                    {buttonType.children.map((button, buttonIndex) => (\r\n                                        <SidebarLink to={`#${button.type}`} text={button.label} level={1} \r\n                                            key={`${index}_${buttonIndex}`} clickCallback={setCurrentButton}\r\n                                            current={currentButton} />\r\n                                    ))}\r\n                                </div>\r\n                            )\r\n                        }\r\n                    })}\r\n                </Sidebar>\r\n                <div className=\"container content lg:pr-20 md:w-8/12 pl-3\">\r\n                    <h1 className=\"text-4xl md:text-left text-center\">{button && button.button.title}</h1>\r\n                    <span className=\"mb-7 text-sm block md:text-left text-center\">Type: {button && button.type.name}</span>\r\n                    {hasVariations && button.button.variations.map((variation, index) => (\r\n                        <ButtonExample button={\r\n                                {classes: `${button.button.classes} ${variation.classes}`, htmlContent: variation.html, \r\n                                label: variation.label, text: variation.text}}\r\n                            type={button.type} key={index} />\r\n                    ))}\r\n                    {(button && !hasVariations) && \r\n                        <ButtonExample button={button.button} type={button.type} htmlContent={button.html} />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Examples","/* eslint-disable react/jsx-no-target-blank */\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Hero () {\r\n    return (\r\n        <div className=\"lg:mb-32 mb-10\">\r\n            <div className=\"container mx-auto px-4\">\r\n                <h1 className=\"lg:text-7xl lg:mt-16 mt-5 text-gray-600 dark:text-white text-5xl underline-red\">\r\n                    Simple and Creative buttons with sButtons.\r\n                </h1>\r\n                <div className=\"lg:mt-10 mt-9\">\r\n                    <Link to=\"/documentation\" className=\"sbtn fill-color-btn down-fill blue-btn font-medium\">\r\n                        Documentation\r\n                    </Link>\r\n                    <a href=\"https://raw.githubusercontent.com/sButtons/sbuttons/master/dist/sbuttons.min.css\" \r\n                        target=\"_blank\"\r\n                        className=\"sbtn fill-color-btn up-fill red-btn font-medium ml-3\">\r\n                        Download\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Hero","/* eslint-disable react/jsx-no-target-blank */\nimport React from 'react'\nimport { FiCloud, FiCode } from 'react-icons/fi'\nimport Code from '../../components/Code'\nimport Footer from '../../components/Footer'\nimport Common from '../Common'\nimport Hero from '../../components/Hero'\n\nfunction Home () {\n    return (\n        <div className=\"home\">\n            <Common />\n            <Hero />\n            <div className=\"content container px-4 mx-auto\">\n                <section className=\"p-4\">\n                    <h2 className=\"text-3xl font-bold text-red-600\">\n                        <span className=\"inline-block mr-3 align-middle\">\n                            <FiCode size=\"2rem\" />\n                        </span>\n                        Installation\n                    </h2>\n                    <div className=\"gap-12 grid md:grid-cols-2 text-xl mt-2\">\n                        <p>\n                            Install sButttons’s source LESS via npm.\n                            Package managed installs don’t include documentation or our full build scripts. \n                            You can also use our npm.\n                        </p>\n                        <div>\n                            <Code code={`npm install sbuttons`} language=\"shell\" />\n                        </div>\n                    </div>\n                </section>\n                <section className=\"p-4\">\n                    <h2 className=\"text-3xl font-bold text-red-600\">\n                        <span className=\"inline-block mr-3 align-middle\">\n                            <FiCloud size=\"2rem\" />\n                        </span>\n                        sButtons CDN\n                    </h2>\n                    <div className=\"gap-12 grid md:grid-cols-2 grid-cols-1 text-xl mt-2\">\n                        <p>\n                            When you only need to include sButtons’ compiled CSS , you can use \n                            <a href=\"https://cdn.jsdelivr.net/npm/sbuttons/dist/sbuttons.min.css\" \n                                target=\"_blank\"\n                                className=\"text-gray-600 dark:text-white underline-red ml-1\"\n                            >\n                                sButtons CDN\n                            </a>.\n                        </p>\n                        <div>\n                            <Code code={`<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/sbuttons/dist/sbuttons.min.css\">`} \n                                language=\"html\" />\n                        </div>\n                    </div>\n                </section>\n            </div>\n            <Footer />\n        </div>\n    )\n}\n\nexport default Home","/* eslint-disable jsx-a11y/anchor-has-content */\r\n/* eslint-disable react/jsx-no-target-blank */\r\nimport React from 'react'\r\n\r\nfunction ProjectCard({project: {name, about, url, image}}) {\r\n    return (\r\n        <div className=\"border-2 border-gray-200 flex flex-col group hover:shadow-md lg:w-4/12 md:w-6/12 w-full relative shadow-sm transition-all mr-5 mt-4\">\r\n            <img src={image} alt={name} />\r\n            <div className=\"absolute bg-gray-100 bg-opacity-90 flex flex-col group-hover:opacity-100 h-full items-center justify-center left-0 opacity-0 px-3 text-center top-0 transition-all w-full\">\r\n                <h4 className=\"font-bold\">{name}</h4>\r\n                <p>{about}</p>\r\n                <a href={url} target=\"_blank\" className=\"stretched-link\"></a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectCard","/* eslint-disable react/jsx-no-target-blank */\r\nimport React from 'react'\r\nimport Footer from '../../components/Footer'\r\nimport Common from '../Common'\r\nimport projects from '../../data/projects.json'\r\nimport ProjectCard from '../../components/ProjectCard'\r\n\r\nfunction Projects () {\r\n    return (\r\n        <div className=\"projects\">\r\n            <Common />\r\n            <div className=\"content container px-4 mx-auto mt-5\">\r\n                <h1 className=\"text-3xl\">Projects using sButtons</h1>\r\n                <h2 className=\"text-xl\">Here's a list of projects using sButtons. If you are using sButtons in your project and would like to be featured, please submit it <a href=\"https://github.com/sButtons/sbuttons/issues/1255\" target=\"_blank\" className=\"underline-red\">here</a>.</h2>\r\n                <section className=\"flex flex-wrap mt-5\">\r\n                    {projects.map((project, index) => <ProjectCard project={project} key={index} />)}\r\n                </section>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects","import React from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Documentation from './pages/Documentation'\r\nimport Examples from './pages/Examples'\r\nimport Home from './pages/Home'\r\nimport Projects from './pages/Projects'\r\n\r\nfunction App () {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route path=\"/projects-using-sbuttons\" component={Projects} />\r\n                <Route path=\"/documentation\" component={Documentation} />\r\n                <Route path=\"/examples\" component={Examples} />\r\n                <Route path=\"/\" exact={true} component={Home} />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
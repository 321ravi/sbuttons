{"version":3,"file":"main.cec3a22202bf0f8e2225.hot-update.js","sources":["C:/Me/Web Development/sbuttons/website/src/components/Code.js"],"sourcesContent":["import React from 'react'\r\nimport Highlight, { defaultProps } from \"prism-react-renderer\"\r\nimport okaidia from \"prism-react-renderer/themes/okaidia\"\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard'\r\nimport { FiCopy } from 'react-icons/fi'\r\nimport { toast } from 'react-toastify'\r\n\r\n\r\nfunction Code ({code, language}) {\r\n\r\n    function showToast () {\r\n        toast.success('Copied!', {\r\n            className: 'dark:bg-gray-800',\r\n            position: \"top-right\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: false,\r\n            pauseOnHover: false,\r\n            draggable: false,\r\n            progress: undefined,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Highlight {...defaultProps} theme={okaidia} code={code} language={language}>\r\n            {({ className, style, tokens, getLineProps, getTokenProps }) => (\r\n            <pre className={className + ' p-3 pr-9 dark:bg-gray-700 relative overflow-x-auto'} style={style}>\r\n                {tokens.map((line, i) => (\r\n                <div {...getLineProps({ line, key: i })}>\r\n                    {line.map((token, key) => (\r\n                    <span {...getTokenProps({ token, key })} />\r\n                    ))}\r\n                </div>\r\n                ))}\r\n                <CopyToClipboard text={code} onCopy={showToast}>\r\n                    <button className=\"absolute cursor-pointer right-2 top-4 h-full bg-gray-700\">\r\n                        <FiCopy className=\"duration-100 hover:opacity-100 opacity-60 transition-opacity\" />\r\n                    </button>\r\n                </CopyToClipboard>\r\n            </pre>\r\n            )}\r\n        </Highlight>\r\n    )\r\n}\r\n\r\nexport default Code"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAmBA;AACA;AApCA;AAqCA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}
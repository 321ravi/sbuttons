{"version":3,"file":"main.786ab05fad77519d30e0.hot-update.js","sources":["C:/Me/Web Development/sbuttons/website/src/components/MenuToggler.js"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useRef } from 'react'\r\nimport { FiMenu } from 'react-icons/fi'\r\nimport 'animate.css';\r\n\r\nfunction MenuToggler () {\r\n    const menu = document.getElementById('sidebar')\r\n    const menuToggleRef = useRef(null)\r\n    const openClasses = useMemo(() => {\r\n            return ['animate__slideInLeft']\r\n        }, []),\r\n        closeClasses = useMemo(() => {\r\n            return ['animate__slideOutLeft', '-left-1/2']\r\n        }, [])\r\n\r\n    function changeSidebarClasses (add, remove) {\r\n        menu.classList.remove(...remove)\r\n        menu.classList.add(...add)\r\n    }\r\n\r\n    const changeSidebarClassesCallback = useCallback(changeSidebarClasses, [menu])\r\n\r\n    function toggleSidebar () {\r\n        if (menu) {\r\n            let add = openClasses,\r\n                remove = closeClasses\r\n            if (menu.classList.contains(openClasses)) {\r\n                add = closeClasses\r\n                remove = openClasses\r\n            }\r\n            \r\n            changeSidebarClassesCallback(add, remove)\r\n        }\r\n    }\r\n\r\n    function closeSidebar (e) {\r\n        if (e.target && menuToggleRef && e.target.id !== 'sidebar' && !e.target.isSameNode(menuToggleRef.current) && \r\n            !menuToggleRef.current.contains(e.target)\r\n            && !menu.contains(e.target) && \r\n            menu.classList.contains(openClasses)) {\r\n            changeSidebarClassesCallback([closeClasses[0]], openClasses)\r\n        }\r\n    }\r\n\r\n    const closeSidebarCallback = useCallback(closeSidebar, [changeSidebarClassesCallback, closeClasses, menu, openClasses])\r\n\r\n    const resizeListener = useCallback(() => {\r\n        if (window.innerWidth >= 768) {\r\n            changeSidebarClassesCallback([closeClasses[1]], closeClasses)\r\n        }\r\n    }, [changeSidebarClassesCallback, closeClasses])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', resizeListener)\r\n        document.body.addEventListener('click', closeSidebarCallback)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', resizeListener)\r\n            document.body.removeEventListener('click', closeSidebarCallback)\r\n        }\r\n    }, [resizeListener, closeSidebarCallback])\r\n\r\n    return (\r\n        <div className=\"md:hidden flex sm:w-1/12 w-2/12 sm:pl-0 pl-3\">\r\n            <button className=\"focus:outline-none hover:opacity-100 opacity-40 transition-none\" \r\n                onClick={toggleSidebar}\r\n                ref={menuToggleRef}>\r\n                <FiMenu size=\"1.5rem\" />\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MenuToggler"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAnEA;AACA;AADA;AAoEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}
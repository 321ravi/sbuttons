{"version":3,"file":"main.b5f1c2abcd1fb65368c4.hot-update.js","sources":["C:/Me/Web Development/use-dark-mode-hook/index.js","C:/Me/Web Development/use-dark-mode-hook/src/useDarkMode.js"],"sourcesContent":["import useDarkMode from \"./src/useDarkMode\";\r\n\r\nexport { useDarkMode as default } from './src/useDarkMode'\r\nexport { DarkModeToggler } from './src/DarkModeToggler'","import { useState, useEffect } from 'react'\r\n\r\nexport const useDarkMode = function ({initialValue = false, darkModeClass = 'dark', lightModeClass = 'light', element = 'body'} = {}) {\r\n    const [isDarkMode, setDarkMode] = useState(initialValue)\r\n    const elm = document.querySelector(element)\r\n\r\n    const toggleDarkMode = function (on = true) {\r\n        const theme = on ? darkModeClass : lightModeClass\r\n        if (!elm.classList.contains(theme)) {\r\n            elm.classList.add(theme)\r\n            const oppositeTheme = on ? lightModeClass : darkModeClass\r\n            if (elm.classList.contains(oppositeTheme)) {\r\n                elm.classList.remove(oppositeTheme)\r\n            }\r\n        }\r\n        localStorage.setItem('theme', theme)\r\n        if (isDarkMode !== on) {\r\n            setDarkMode(on)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let theme = localStorage.getItem('theme')\r\n        if (!theme) {\r\n            theme = lightModeClass //default value\r\n        }\r\n        toggleDarkMode(theme === darkModeClass)\r\n    }, [lightModeClass, darkModeClass])\r\n    \r\n    if (!elm) {\r\n        console.error(`useDarkMode ERROR: ${element} is not defined in the document`)\r\n        return\r\n    }\r\n\r\n    return [isDarkMode, toggleDarkMode]\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}
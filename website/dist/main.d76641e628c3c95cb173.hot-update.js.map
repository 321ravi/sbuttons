{"version":3,"file":"main.d76641e628c3c95cb173.hot-update.js","sources":["C:/Me/Web Development/use-dark-mode-hook/src/useDarkMode.js"],"sourcesContent":["import { useState, useEffect } from 'react'\r\n\r\nfunction useDarkMode ({initialValue = false, darkModeClass = 'dark', lightModeClass = 'light', element = 'body'} = {}) {\r\n    const [isDarkMode, setDarkMode] = useState(initialValue)\r\n    const elm = document.querySelector(element)\r\n\r\n    const toggleDarkMode = function (on = true) {\r\n        setDarkMode(on)\r\n    }\r\n\r\n    useEffect(() => {\r\n        let theme = localStorage.getItem('theme')\r\n        if (!theme) {\r\n            theme = lightModeClass //default value\r\n        }\r\n        toggleDarkMode(theme === darkModeClass)\r\n    }, [lightModeClass, darkModeClass])\r\n\r\n    useEffect(() => {\r\n        const theme = isDarkMode ? darkModeClass : lightModeClass\r\n        if (!elm.classList.contains(theme)) {\r\n            elm.classList.add(theme)\r\n            const oppositeTheme = isDarkMode ? lightModeClass : darkModeClass\r\n            if (elm.classList.contains(oppositeTheme)) {\r\n                elm.classList.remove(oppositeTheme)\r\n            }\r\n        }\r\n        localStorage.setItem('theme', theme)\r\n    }, [isDarkMode, elm, darkModeClass, lightModeClass])\r\n    \r\n    if (!elm) {\r\n        console.error(`useDarkMode ERROR: ${element} is not defined in the document`)\r\n        return\r\n    }\r\n\r\n    return [isDarkMode, toggleDarkMode]\r\n}\r\n\r\nexport default useDarkMode"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}